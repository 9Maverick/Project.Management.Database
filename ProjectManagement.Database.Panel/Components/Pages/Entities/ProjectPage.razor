@page "/projects/{id:int}"
@attribute [StreamRendering]

@inject IProjectPageViewModel viewModel

@code
{
    [Parameter]
    public int Id { get; set; }

    protected override Task OnInitializedAsync()
    {
        viewModel.Id = (uint)Id;
        return base.OnInitializedAsync();
    }
}

<PageTitle>Project</PageTitle>

@if(!viewModel.IsLoaded)
{
    <p>Loading...</p>
}
else
{

    <h1>@viewModel.Entity.Name</h1>

    @if (!viewModel.IsEditing)
    {
        <p>
            Name:
            @viewModel.Entity.Name

        </p>
        <p>
            Abbreviation:
            @viewModel.Entity.Abbreviation

        </p>
        <p>
            <button @onclick="viewModel.Edit">Edit</button>
        </p>

        @if (viewModel.TicketCollection.Entities.Count > 0)
        {
            <h3>Tickets</h3>
            <TicketCollection viewModel="viewModel.TicketCollection" />
        }
        else
        {
            <p>There are no tickets in this project</p>
        }
    }
    else
    {
        <p>
            Name:
            <input @bind="viewModel.Entity.Name" class="form-control" placeholder="Name" />

        </p>
        <p>
            Abbreviation:
            <input @bind="viewModel.Entity.Abbreviation" class="form-control" placeholder="Abbreviation" />
        </p>
        <p>
            <button @onclick="viewModel.Save">Save</button>
            <button @onclick="viewModel.Cancel">Cancel</button>
        </p>
    }
    <br />
    <p>
        <button @onclick="viewModel.Delete">Delete project</button>
    </p>
}